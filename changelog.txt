0.2.25
Build with the latest elliptics-go (bfcde60fca), which fixes read size of the small files

0.2.24
proxy: reverted test changes which broke static content delivery
makefile: use custom GOROOT
elliptics: use elliptics client config in transport api, not the whole proxy conf
docker: updated go to 1.6.2

0.2.23
proxy: allow different profile collection over http

0.2.22
Switched to new dynamic channels elliptics.DChannel instead of plain channels

0.2.21
proxy: put back manual GC invocation
bucket: do not return error if config has been read, but not updated because automatic update is disabled for some time
config: use 'redirect-token' key name consistently with other names

0.2.20
proxy: get rid of manual GC invocation

0.2.19
proxy: added handler which allows local config update, it may also disable automatic config update from file or from elliptics for some time
config: removed Defrag* options, defragmentation selection logic was moved into separate project
proxy_stat: added proxy config into reply
docker: updated cached version to use new versioning

0.2.18
New versioning scheme
bucket: penalize bucket if current route table doesn't have entry for requested group
docker: increase base version and go version
elliptics-go: increase channel sizes to fix async c++ calls which synchronously invoke callbacks

1.5.2.0.17
proxy: print start time for handler call
proxy: run GC in separate gorouting, set large enough GC threshold to disable background GC
proxy: remove unused code

1.5.2.0.16 be033c5b177e6039cca5b70b4213ed8dfba10bf4
Use elliptics 2.26.10.1
Added docker files for cached/non-cached builds
elliptics: ignore ioflags/cflags/trace_id/x-request parsing error, create session nevertheless
added many range/size/offset tests
bucket: if there is offset/size uri parameter, do not use data in range header
test: do not split proxy/test logs, use one for both. Moved test_bucket_update() and added some debug prints
bucket: update back buckets periodically with writable buckets, this allows its metadata update
test: fixed status code and number of operations checks, minor cleanups
bucket: when selecting bucket, multipla its internal pain to content length, since internal pain is performance per byte
bucket: increase pain counter proportionally to the amount of free space, indent long lines
bucket: get rid of defrag scan, it was moved into bucket-edge
bucket: added safety checks when decoding bucket metadata
docker: remove previously compiled packages for safety
docker: newer go version, remove old sources, use make
... many other features from the older builds, which didn't get into this changelog
